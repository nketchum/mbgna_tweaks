<?php

use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\Role;
use Drupal\views\ViewExecutable;
use Drupal\Core\Url;

/**
 * @file
 * Primary module hooks for MBGNA Tweaks module.
 */

/**
 * Implements hook_form_alter()
 *
 * Change some view filter form settings to simplify the display
 * for better user experience.
 */
function mbgna_tweaks_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $route_name = \Drupal::routeMatch()->getRouteName();

  // Set default selection labels for "better select" views filter module.
  if ($form['#id'] == 'views-exposed-form-events-page-1' && isset($form['date_wrapper'])) {
    if (isset($form['categories'])) {
      $form['categories']['#options']['All'] = t('Select a category...');
    }
    if (isset($form['location'])) {
      $form['location']['#options']['All'] = t('Select a location...');
    }
    if (isset($form['date_wrapper'])) {
      $form['date_wrapper']['date_wrapper']['date']['min']['#title'] = '';
      $form['date_wrapper']['date_wrapper']['date']['max']['#title'] = '';
    }
  }

  // Remove min/max labels from date range fields.
  if ($form['#id'] == 'views-exposed-form-positions-page-1') {
    if (isset($form['posted_wrapper'])) {
      $form['posted_wrapper']['posted_wrapper']['posted']['min']['#title'] = '';
      $form['posted_wrapper']['posted_wrapper']['posted']['max']['#title'] = '';
    }
  }

  // Users cannot delete their customer profile. Only privileged users.
  if ($form['#id'] == 'profile-customer-edit-form' || $form['#id'] == 'profile-customer-add-form') {
    $markup = <<<HEREB
      <h2>Purchase account</h2>
      <p class="larger">Provide your current name and primary address to make new orders for gift shop products, plant sales, ticket purchases and more.</p>
      HEREB;

    $form['heading'] = array(
      '#markup' => $markup,
      '#weight' => -1,
    );
  }
}

// Helper function for form actions/redirects that allows products to be 
// "added to cart" but skip the cart and go direct to checkout. Usually the
// "Add to cart" button label is changed in hook_form_alter() to say something
// like "Purchase" to reflect the shopping cart is not part of the process.
// 
// Set form_alter submit callbacks like this:
// form['actions']['submit']['#submit'][] = '_redirect_to_checkout';
function _redirect_to_checkout(&$form, FormStateInterface $form_state) {
  $cart_id = $form_state->get('cart_id');
  $url = \Drupal\Core\Url::fromRoute('commerce_checkout.form',
    ['commerce_order' => $cart_id]
  );
  $form_state->setRedirectUrl($url);
}

/**
 * Implements hook_library_info_alter()
 */
function mbgna_tweaks_library_info_alter(&$libraries, $extension) {
  // Add frontend theme to ckeditor5 iframe on the backend.
  if ($extension === 'ckeditor5') {
    $libraries['internal.drupal.ckeditor5.stylesheets']['css']['theme']['/modules/contrib/mbgna_tweaks/css/ckeditor5.css'] = [];
  }
}

/**
 * Implements hook_menu_local_tasks_alter()
 */
function mbgna_tweaks_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {

  if ($route_name == 'entity.user.canonical') {
    $account = \Drupal::routeMatch()->getParameter('user');

    $data['tabs'][0]['entity.user.canonical']['#link']['title'] = t('My dashboard');

    $data['tabs'][0]['entity.user.edit_form']['#weight'] = -9;
    $data['tabs'][0]['entity.user.edit_form']['#link']['title'] = t('My profile');

    $data['tabs'][0]['profile.user_page:customer']['#weight'] = -8;
    $data['tabs'][0]['profile.user_page:customer']['#link']['title'] = t('Purchasing account');

    // Commerce's built-in payment method page is inadequate. Build a better page and
    // override the default local task so it links to the custom page.
    $custom_pay_method_url = Url::fromRoute('view.profile_payment_method.page_1', ['arg_0' => $account->id()]);
    $data['tabs'][0]['entity.commerce_payment_method.collection']['#link']['url'] = $custom_pay_method_url;
    $data['tabs'][0]['entity.commerce_payment_method.collection']['#weight'] = -7;
    $data['tabs'][0]['entity.commerce_payment_method.collection']['#link']['title'] = t('Payment methods');

    $data['tabs'][0]['views_view:view.commerce_user_orders.order_page']['#weight'] = -6;
    $data['tabs'][0]['views_view:view.commerce_user_orders.order_page']['#link']['title'] = t('Past orders');

    if (!\Drupal::currentUser()->hasPermission('view any webform submission')) {
      unset($data['tabs'][0]['entity.webform_submission.user']);  
    }

    $data['tabs'][0]['entity.user.contact_form']['#weight'] = -4;
    $data['tabs'][0]['entity.user.contact_form']['#link']['title'] = t('Contact');

    $data['tabs'][0]['devel.entities:user.devel_tab']['#weight'] = -3;
    $data['tabs'][0]['devel.entities:user.devel_tab']['#link']['title'] = t('Devel');

    // The tab we're adding is dependent on a user's access to add content.
    $cacheability
      ->addCacheContexts([
      'user.permissions',
    ]);
  }
}

